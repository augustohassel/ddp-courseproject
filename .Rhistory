from = from.dat,
to = to.dat,
auto.assign = F)
daily <- data$MERV.Adjusted
etsfit <- ets(daily)
fcast <- forecast(etsfit, h = 10)
plot(fcast)
fcast
arimafit <- auto.arima(daily)
fcastarima <- forecast(arimafit)
plot(fcastarima)
chartSeries(fcastarima)
arfimafit <- arfima(daily)
arimafit <- auto.arima(daily)
daily <- as.ts(data$MERV.Adjusted)
etsfit <- ets(daily)
fcast <- forecast(etsfit, h = 10)
plot(fcast)
arimafit <- auto.arima(daily)
fcastarima <- forecast(arimafit)
plot(fcastarima)
arfimafit <- arfima(daily)
fcastarfimafit <- forecast(arfimafit)
plot(fcastarima)
arfimafit <- arfima(daily)
plot(fcastarfimafit)
Arimafir <- Arima(daily)
fcastaArimafir <- forecast(Arimafir)
plot(fcastaArimafir)
Arimafir <- Arima(daily)
fcastaArimafir <- forecast(Arimafir)
plot(fcastaArimafir)
Arimafir
arimaorder(fcastarima)
arimaorder(arimafit)
arimafit
culo <- bats(daily)
teta <- forecast(culo)
plot(teta)
teta
culo
culo <- nnetar(daily)
teta <- forecast(culo)
plot(teta)
teta
culo
culo <- nnetar(daily)
teta <- forecast(culo, h = 5)
plot(teta)
teta
culo
culo <- tbats(daily)
teta <- forecast(culo, h = 5)
plot(teta)
teta
culo
culo <- thetaf(daily)
teta <- forecast(culo, h = 5)
plot(teta)
teta
culo
HoltWinters(daily)
culo <- arfima(daily)
teta <- forecast(culo)
plot(teta)
culo <- ets(daily)
teta <- forecast(culo)
plot(teta)
culo <- auto.arima(daily)
teta <- forecast(culo)
plot(teta)
culo <- bats(daily)
teta <- forecast(culo)
plot(teta)
culo <- tbats(daily)
teta <- forecast(culo)
plot(teta)
culo <- nnetar(daily)
teta <- forecast(culo)
plot(teta)
from.dat <- as.Date(x = "14/08/13", format = "%d/%m/%y")
to.dat <- as.Date(x = "24/09/15", format = "%d/%m/%y")
data <- getSymbols(Symbols = "^MERV",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
daily <- as.ts(data$MERV.Adjusted)
culo <- nnetar(daily)
teta <- forecast(culo)
plot(teta)
culo <- auto.arima(daily)
teta <- forecast(culo)
plot(teta)
teta
head(teta)
teta$x
teta$fitted
teta <- forecast(culo, 50)
culo <- nnetar(daily)
teta <- forecast(culo, 50)
plot(teta)
teta <- forecast(culo, 250)
plot(teta)
culo
arfima()
culo <- arfima(daily)
teta <- forecast(culo)
plot(teta)
teta <- forecast(culo, h = 100)
plot(teta)
teta <- forecast(culo, h = 50)
plot(teta)
from.dat <- as.Date(x = "14/08/14", format = "%d/%m/%y")
data <- getSymbols(Symbols = "^MERV",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
culo <- arfima(daily)
teta <- forecast(culo, h = 50)
plot(teta)
plot(data)
View(data)
time(daily)
time(culo)
time = round(time(culo),  3)
time
data
dataÃ‘,6
data[,6]
head(data[,6])
daily <- as.ts(data[,6])
plot(daily)
daily
daily <- data[,6]
daily
plot(daily)
culo <- arfima(daily)
teta <- forecast(culo, h = 50)
plot(teta)
to.dat <- Sys.Date()
from.dat <- Sys.Date()-14#as.Date(x = "14/08/15", format = "%d/%m/%y")
to.dat <- Sys.Date()
data <- getSymbols(Symbols = "^MERV",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
daily <- data[,6]
culo <- arfima(daily)
teta <- forecast(culo, h = 50)
plot(teta)
teta <- forecast(culo, h = 5)
plot(teta)
str(teta)
culo$n
culo$msg
culo$h
culo$fitted
culo$x
View(data)
teta$x
teta$fitted
teta <- forecast(culo, h = 3)
plot(teta)
teta <- forecast(culo, h = 5)
plot(teta)
teta <- forecast(culo, h = 4)
plot(teta)
teta <- forecast(culo, h = 5)
plot(teta)
from.dat <- Sys.Date()-30#as.Date(x = "14/08/15", format = "%d/%m/%y")
to.dat <- Sys.Date()
## Getting Data with quantmod
data <- getSymbols(Symbols = "^MERV",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
## Methods that can be implemented
daily <- data[,6]
culo <- arfima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
teta
qplot(teta)
library("quantmod");library("forecast");library("ggplot")
library("quantmod");library("forecast");library("ggplot2");
qplot(teta)
teta
plot(teta)
source('~/.active-rstudio-document')
funggcast(daily)
funggcast(daily, teta)
funggcast(as.ts(daily), teta)
chartSeries(teta)
teta
as.xts(teta)
xts(teta)
as.ts(teta)
plot(teta)
abline(h = 10500, colour = "red")
abline(h = 10500, color = "red")
abline(h = 10500, col = "red")
abline(h = daily[1], col = "red")
abline(h = daily[-11], col = "red")
abline(h = daily[-1], col = "red")
plot(teta)
abline(h = daily[-1], col = "red")
abline(h = tail(daily, 1), col = "red")
plot(teta)
abline(h = tail(daily, 1), col = "red")
daily
culo
ead(culo)
head(culo)
culo$x
daily <- as.ts(data[,6])
culo <- arfima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
daily
abline(a =  length(daily), col = "red")
abline(a = length(daily), col = "red")
abline(a = 0, b= length(daily), col = "red")
abline(a = 0, b = length(daily), col = "red")
length(daily)
abline(b = 0, a = length(daily), col = "red")
abline(v =  = length(daily), col = "red")
abline(v = length(daily), col = "red")
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- auto.arima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
daily <- ets(data[,6])
daily <- as.ts(data[,6])
culo <- ets(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- bats(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
from.dat <- Sys.Date()-30#as.Date(x = "14/08/15", format = "%d/%m/%y")
to.dat <- Sys.Date()
data <- getSymbols(Symbols = "TS.BA",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
daily <- as.ts(data[,6])
culo <- bats(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
from.dat <- Sys.Date()-30#as.Date(x = "14/08/15", format = "%d/%m/%y")
to.dat <- Sys.Date()-1
## Getting Data with quantmod
data <- getSymbols(Symbols = "TS.BA",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
## Methods that can be implemented
daily <- as.ts(data[,6])
culo <- bats(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
to.dat <- Sys.Date()-1
to.dat <- Sys.Date()-3
data <- getSymbols(Symbols = "TS.BA",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
## Methods that can be implemented
arfima()
daily <- as.ts(data[,6])
culo <- bats(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- arfima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- auto.arima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- ets(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- arfima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- nnetar(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
data <- getSymbols(Symbols = "APBR.BA",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
daily <- as.ts(data[,6])
culo <- nnetar(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
to.dat <- Sys.Date()-3
data <- getSymbols(Symbols = "APBR.BA",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
## Methods that can be implemented
daily <- as.ts(data[,6])
culo <- nnetar(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- arfima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- auto.arima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- ets(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- bats(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
culo <- nnetar(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
fix(plot.ets())
fix(plot.ets
)
BoxCox(teta$x, teta$lambda)
BoxCox(teta$x)
fix(plot.ets)
teta$x
str(teta$x)
fix(plot.ets)
from.dat <- Sys.Date()-30#as.Date(x = "14/08/15", format = "%d/%m/%y")
to.dat <- Sys.Date()
data <- getSymbols(Symbols = "APBR.BA",
src = "yahoo",
from = from.dat,
to = to.dat,
auto.assign = F)
daily <- as.ts(data[,6])
culo <- nnetar(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
legend("topright", inset=.05, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
legend("bottomleft", inset=.01, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)
plot(teta)
abline(h = tail(daily, 1), col = "red")
abline(v = length(daily), col = "red")
c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)
legend("bottomleft", inset=.2, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)
plot(teta)
abline(v = length(daily), col = "red")
legend("bottomleft", inset=.01, title="Number of Cylinders",
abline(h = tail(daily, 1), col = "red")
c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)
legend("bottomleft", inset=.01, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(3), horiz=TRUE)
abline(h = tail(daily, 1), col = "red")
legend("bottomleft", inset=.01, title="Number of Cylinders",
legend("bottomleft", inset=.01, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(1), horiz=TRUE)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
legend("bottomleft", inset=.01, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(1), horiz=TRUE)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
legend("bottomleft", inset=.01, title="Number of Cylinders",
c("4","6","8"), fill=terrain.colors(2), horiz=TRUE)
fix(plot.et)
fix(plot.ets)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
legend("bottomleft", inset=.01, title="Number of Cylinders",
c("Observed","Forecast"), fill=terrain.colors(2), horiz=F)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
horiz=F)
culo <- auto.arima(daily)
teta <- forecast(culo, h = 5)
plot(teta)
abline(v = length(daily), col = "red")
abline(h = tail(daily, 1), col = "red")
fill = col("black", "blue")
plot(teta)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
fill = col("black", "blue")
horiz=F)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
fill = col("black", "blue"),
horiz=F)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
fill = colors("black", "blue"),
horiz=F)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
col =("black", "blue"),
horiz=F)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
col = c("black", "blue"),
horiz=F)
plot(teta)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
col = c("black", "blue"),
horiz=F)
?par
plot(teta)
legend("bottomleft", inset=.01,
legend = c("Observed","Forecast"),
fill = c("black", "blue"),
horiz=F)
plot(teta)
legend("bottomleft",
legend = c("Observed","Forecast"),
fill = c("black", "blue"),
horiz=F)
plot(teta)
legend("bottomleft",
legend = c("Observed","Forecast"),
fill = c("black", "blue"),
lty = c(1,1),
horiz=F)
plot(teta)
legend("bottomleft",
legend = c("Observed","Forecast"),
col = c("black", "blue"),
lty = c(1,1),
lwd = c(2,2)
horiz=F)
plot(teta)
legend("bottomleft",
legend = c("Observed","Forecast"),
col = c("black", "blue"),
lty = c(1,1),
lwd = c(2,2),
horiz=F)
fix(plot.ets)
teta$fitted
teta$mean
getwd()
setwd("D:\Usuario\Documents\Cursos online\Data Science - Johns Hopkins\9 Developing Data Products\course_project")
setwd("D:/Usuario/Documents/Cursos online/Data Science - Johns Hopkins/9 Developing Data Products/course_project")
library("shiny")
runApp()
runApp()
runApp()
runApp(launch.browser = T)
runApp()
runApp()
